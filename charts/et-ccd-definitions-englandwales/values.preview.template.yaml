tags:
  et-ccd-stack: true

nodejs:
  # Don't modify below here
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}

idam-pr:
  releaseNameOverride: ${SERVICE_NAME}-ccd-pr
  enabled: true
  redirect_uris:
    XUI:
      - https://xui-${SERVICE_FQDN}/oauth2/callback
    XUIMO:
      - https://xui-mo-${SERVICE_FQDN}/oauth2/callback
    CCD:
      - https://case-management-web-${SERVICE_FQDN}/oauth2redirect
    CCD Admin:
      - https://admin-web-${SERVICE_FQDN}/oauth2redirect

xui-webapp:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-webapp
    image: hmctspublic.azurecr.io/xui/webapp:latest
    ingressHost: xui-${SERVICE_FQDN}
    environment:
      HEALTH_CCD_COMPONENT_API: http://gateway-${SERVICE_FQDN}/health
      HEALTH_CCD_DATA_API: http://${SERVICE_NAME}-ccd-data-store-api/health
      HEALTH_TERMS_AND_CONDITIONS_API: http://xui-terms-and-conditions-${SERVICE_FQDN}.service.core-compute-preview.internal/health
      SERVICES_CCD_COMPONENT_API: http://gateway-${SERVICE_FQDN}
      SERVICES_CCD_DATA_STORE_API: http://${SERVICE_NAME}-ccd-data-store-api
      SERVICES_CCD_CASE_ASSIGNMENT_API: http://aac-${SERVICE_FQDN}
      SERVICES_TERMS_AND_CONDITIONS: http://xui-terms-and-conditions-${SERVICE_FQDN}.service.core-compute-preview.internal
      JURISDICTIONS: EMPLOYMENT

xui-mo-webapp:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-mo-webapp
    image: hmctspublic.azurecr.io/xui/mo-webapp:latest
    ingressHost: xui-mo-${SERVICE_FQDN}
    environment:
      MANAGE_CASE_LINK: https://xui-${SERVICE_FQDN}/cases
      MANAGE_ORG_LINK: https://xui-mo-${SERVICE_FQDN}
      SERVICES_CCD_DATA_STORE_API: http://${SERVICE_NAME}-ccd-data-store-api
      SERVICES_MCA_PROXY_API: http://${SERVICE_NAME}-aac-manage-case-assignment
      CASE_TYPES: "ET_EnglandWales,ET_EnglandWales_Listings,ET_EnglandWales_Multiple"

et-cos:
  enabled: true
  java:
    imagePullPolicy: Always
    image: hmctspublic.azurecr.io/et/cos:latest
    releaseNameOverride: ${SERVICE_NAME}-et-cos
    ingressHost: cos-${SERVICE_FQDN}
    environment:
      ET_COS_DB_HOST: "{{ .Release.Name }}-postgresql"
      ET_COS_DB_NAME: "{{ .Values.postgresql.postgresqlDatabase}}"
      ET_COS_DB_USER_NAME: "{{ .Values.postgresql.postgresqlUsername}}"
      ET_COS_DB_PASSWORD: "{{ .Values.postgresql.postgresqlPassword}}"
      ET_COS_DB_CONN_OPTIONS: ""
    keyVaults:
      et-cos:
        secrets:
          - name: et-cos-s2s-secret
            alias: ET_COS_S2S_SECRET
      et:
        secrets:
          - name: create-updates-queue-send-connection-string
            alias: CREATE_UPDATES_QUEUE_SEND_CONNECTION_STRING
          - name: tornado-access-key
            alias: TORNADO_ACCESS_KEY
    postgresql:
      enabled: true

ccd:
  ccd:
    definitionImporter:
      enabled: false
    managementWeb:
      enabled: false
    apiGatewayWeb:
      enabled: true
    s2s:
      enabled: false
    printService:
      enabled: true
    elastic:
      enabled: true

  ingressHost: ${SERVICE_FQDN}
  ingressIP: ${INGRESS_IP}
  consulIP: ${CONSUL_LB_IP}

  global:
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    ccdAdminWebIngress: admin-web-${SERVICE_FQDN}
    ccdApiGatewayIngress: gateway-${SERVICE_FQDN}
    postgresUsername: hmcts
    postgresPassword: hmcts
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal

  ccd-user-profile-api:
    java:
      autoscaling:
        enabled: false
      imagePullPolicy: Always
      enviroment:
        USER_PROFILE_DB_HOST: ${SERVICE_NAME}-postgresql
      keyVaults: []
      environment:
        USER_PROFILE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_definition,ccd_admin
      ingressHost: ccd-user-profile-api-${SERVICE_FQDN}

  ccd-data-store-api:
    java:
      autoscaling:
        enabled: false
      imagePullPolicy: Always
      image: hmctspublic.azurecr.io/ccd/data-store-api:latest
      environment:
        DATA_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DATA_STORE_IDAM_KEY: ${DATA_STORE_S2S_KEY}
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,ccd_gateway,fpl_case_service,ccd_data,ccd_ps,aac_manage_case_assignment,xui_webapp,ccd_case_document_am_api,et_cos
        CCD_S2S_AUTHORISED_SERVICES_CASE_USER_ROLES: aac_manage_case_assignment,fpl_case_service,et_cos
        IDAM_API_BASE_URL: https://idam-api.aat.platform.hmcts.net
        IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
        IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET: ${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}
        IDAM_DATA_STORE_SYSTEM_USER_USERNAME: ${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}
        IDAM_DATA_STORE_SYSTEM_USER_PASSWORD: ${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}
        CASE_DOCUMENT_AM_URL: http://ccd-case-document-am-api-aat.service.core-compute-aat.internal
        ROLE_ASSIGNMENT_URL: http://am-role-assignment-service-aat.service.core-compute-aat.internal
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOSTS: ${SERVICE_NAME}-es-master:9200
        ELASTIC_SEARCH_DATA_NODES_HOSTS: http://${SERVICE_NAME}-es-master:9200
        ENABLE_ATTRIBUTE_BASED_ACCESS_CONTROL: true
        ENABLE_PSEUDO_ROLE_ASSIGNMENTS_GENERATION: true
        ENABLE_PSEUDO_ACCESS_PROFILES_GENERATION: true
      keyVaults: []
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}

  am-role-assignment-service:
    java:
      keyVaults:
        am:
          secrets:
            - role-assignment-service-LD-SDK-KEY

  ccd-case-print-service:
    nodejs:
      autoscaling:
        enabled: false
      environment:
        IDAM_PRINT_SERVICE_KEY: ${PRINT_S2S_KEY}
      ingressHost: ccd-case-print-service-${SERVICE_FQDN}

  ccd-definition-store-api:
    java:
      autoscaling:
        enabled: false
      imagePullPolicy: Always
      image: hmctspublic.azurecr.io/ccd/definition-store-api:latest
      keyVaults: []
      environment:
        DEFINITION_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DEFINITION_STORE_IDAM_KEY: ${DEFINITION_STORE_S2S_KEY}
        DEFINITION_STORE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_gw,ccd_admin,aac_manage_case_assignment
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOST: ${SERVICE_NAME}-es-master
      ingressHost: ccd-definition-store-${SERVICE_FQDN}

  ccd-admin-web:
    nodejs:
      autoscaling:
        enabled: false
      image: hmctspublic.azurecr.io/ccd/admin-web:latest
      ingressHost: admin-web-${SERVICE_FQDN}
      keyVaults: []
      environment:
        USER_PROFILE_DB_HOST: ${SERVICE_NAME}-postgresql
        IDAM_ADMIN_WEB_SERVICE_KEY: ${ADMIN_S2S_KEY}
        IDAM_OAUTH2_AW_CLIENT_SECRET: ${ADMIN_WEB_IDAM_SECRET}

#  ccd-case-management-web:
#    nodejs:
#      devmemoryRequests: 512Mi
#      devcpuRequests: "1000m"
#      devmemoryLimits: 1024Mi
#      devcpuLimits: "2500m"
#      resources:
#        requests:
#          cpu: 1000m
#          memory: 512Mi
#      autoscaling:
#        enabled: false
#      environment:
#        CCD_ACTIVITY_URL: null
#        DM_URL: https://gateway-${SERVICE_FQDN}/documents
#        DM_URL_REMOTE: https?://(gateway-${SERVICE_FQDN}:443|dm-store-aat.service.core-compute-aat.internal)/documents
#        NODE_TLS_REJECT_UNAUTHORIZED: 0
#        APPINSIGHTS_ENABLED: false
#      ingressHost: case-management-web-${SERVICE_FQDN}
#      ingressIP: ${INGRESS_IP}

  ccd-api-gateway-web:
    nodejs:
      autoscaling:
        enabled: false
      keyVaults: []
      environment:
        IDAM_SERVICE_KEY: ${API_GATEWAY_S2S_KEY}
        IDAM_OAUTH2_CLIENT_SECRET: ${API_GATEWAY_IDAM_SECRET}
        PROXY_DOCUMENT_MANAGEMENT: http://dm-store-aat.service.core-compute-aat.internal
        PROXY_PRINT_SERVICE: http://ccd-case-print-service-${SERVICE_FQDN}
        ADDRESS_LOOKUP_TOKEN: ${ADDRESS_LOOKUP_TOKEN}
      ingressHost: gateway-${SERVICE_FQDN}
      ingressIP: ${INGRESS_IP}

  postgresql:
    persistence:
      enabled: false

  elasticsearch:
    clusterName: "es"
    imageTag: "7.17.0"
    replicas: 1
    initResources:
      limits:
        cpu: "500m"
        memory: "512Mi"
      requests:
        cpu: "25m"
        memory: "512Mi"
    minimumMasterNodes: 1
    antiAffinity: "soft"
    esJavaOpts: "-Xmx512m -Xms512m"
    extraEnvs:
      - name: discovery.type
        value: single-node
      - name: cluster.initial_master_nodes
        value: ""
      - name: action.auto_create_index
        value: .security*,.watches,.triggered_watches,.watcher-history-*,.logstash_dead_letter,.ml*
    persistence:
      enabled: false
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
      path: /
      hosts:
        - es-${SERVICE_FQDN}

  logstash:
    devmemoryRequests: 512Mi
    devcpuRequests: "1000m"
    devmemoryLimits: 1024Mi
    devcpuLimits: "2500m"
    resources:
      requests:
        cpu: 1000m
        memory: 512Mi
    image:
      repository: hmctspublic.azurecr.io/ccd/logstash
      tag: ccd-ethos-logstash-latest
      pullPolicy: Always
    logstashJavaOpts: -Xmx1g -Xms512M
    persistence:
      enabled: false
    volumeMounts:
      - name: pipeline
        mountPath: /usr/share/logstash/files
    elasticsearch:
      host: ${SERVICE_NAME}-es-master
      port: 9200
    configTpl:
      xpack.monitoring.enabled: "false"
      db.url: jdbc:postgresql://${SERVICE_NAME}-postgresql:5432/data-store?ssl=disable&stringtype=unspecified
      db.user: hmcts
      db.pwd: hmcts
      es.data.nodes.url: http://${SERVICE_NAME}-es-master:9200
    livenessProbe:
      initialDelaySeconds: 90

#aac-manage-case-assignment:
#  enabled: true
#  java:
#    imagePullPolicy: Always
#    releaseNameOverride: ${SERVICE_NAME}-aac-manage-case-assignment
#    image: hmctspublic.azurecr.io/aac/manage-case-assignment:latest
#    ingressHost: aac-${SERVICE_FQDN}
#    keyVaults: []
#    environment:
#      IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
#      IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
#      OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts
#      S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
#      MCA_DS_PROXY_URLS_ALLOWED_LIST: /searchCases.*,/internal/searchCases.*,/internal/cases.*
#      MCA_DEF_STORE_PROXY_URLS_ALLOWED_LIST: /api/display/challenge-questions.*
#      MANAGE_CASE_S2S_AUTHORISED_SERVICES: xui_webapp,ccd_data,fpl_case_service,divorce_frontend,divorce_ccd_submission,finrem_case_orchestration
#      CCD_DATA_STORE_API_BASE_URL: http://${SERVICE_NAME}-ccd-data-store-api
#      CCD_DEFINITION_STORE_API_BASE_URL: http://${SERVICE_NAME}-ccd-definition-store
#      PRD_HOST: http://rd-professional-api-aat.service.core-compute-aat.internal
#      IDAM_CAA_USERNAME: ${IDAM_CAA_USERNAME}
#      IDAM_CAA_PASSWORD: ${IDAM_CAA_PASSWORD}
#      IDAM_CLIENT_SECRET: ${IDAM_MCA_CLIENT_SECRET}
#      MANAGE_CASE_S2S_KEY: ${MANAGE_CASE_S2S_KEY}
#      IDAM_NOC_APPROVER_USERNAME: ${IDAM_NOC_APPROVER_USERNAME}
#      IDAM_NOC_APPROVER_PASSWORD: ${IDAM_NOC_APPROVER_PASSWORD}
#      NOTIFY_MCA_API_KEY: ${UK_GOV_NOTIFY_API_KEY}
#      NOTIFY_EMAIL_TEMPLATE_ID: 85f22924-7b45-4fc6-9954-c08a8833f6a0
#    autoscaling:
#      enabled: false
